{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _initialState;\n\nimport shortId from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\nexport var initialState = (_initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"eunjeong\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판이 나왔군요~\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"hero\"\n      },\n      content: \"얼른 사고싶어\"\n    }]\n  }]\n}, _defineProperty(_initialState, \"mainPosts\", []), _defineProperty(_initialState, \"imagePaths\", []), _defineProperty(_initialState, \"hasMorePost\", true), _defineProperty(_initialState, \"loadPostsLoading\", false), _defineProperty(_initialState, \"loadPostsDone\", false), _defineProperty(_initialState, \"loadPostsError\", null), _defineProperty(_initialState, \"addPostLoading\", false), _defineProperty(_initialState, \"addPostDone\", false), _defineProperty(_initialState, \"addPostError\", null), _defineProperty(_initialState, \"removePostLoading\", false), _defineProperty(_initialState, \"removePostDone\", false), _defineProperty(_initialState, \"removePostError\", null), _defineProperty(_initialState, \"addCommentLoading\", false), _defineProperty(_initialState, \"addCommentDone\", false), _defineProperty(_initialState, \"addCommentError\", null), _initialState);\nexport var generateDymmyPost = number = Array(20).fill().map(function () {\n  return {\n    id: shortId.generate(),\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.paragraph(),\n    Images: [{\n      src: faker.image.image()\n    }],\n    Comments: [{\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n});\nexport var LOAD_POSTS_REQUEST = \"ADD_POST_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"ADD_POST_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"은짱\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"은짱\"\n    }\n  };\n}; //reducer는 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 ㅣ키면서)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts.action.data.concat(draft.mainPosts);\n        draft.hasMorePost = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = true;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = true;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex(\n          //   (v) => v.id === action.data.postId\n          // );\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","generateDymmyPost","number","Array","fill","map","name","findName","lorem","paragraph","image","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","loadPostsLoading","loadPostsDone","loadPostsError","concat","hasMorePost","length","error","addPostLoading","addPostDone","addPostError","unshift","removePostLoading","removePostDone","removePostError","filter","v","addCommentLoading","addCommentDone","addCommentError","post","find","postId"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\r\nimport produce from \"immer\";\r\nimport faker from \"faker\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"eunjeong\",\r\n      },\r\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\r\n      Images: [\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"nero\",\r\n          },\r\n          content: \"우와 개정판이 나왔군요~\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"hero\",\r\n          },\r\n          content: \"얼른 사고싶어\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const generateDymmyPost = (number = Array(20)\r\n  .fill()\r\n  .map(() => ({\r\n    id: shortId.generate(),\r\n    User: {\r\n      id: shortId.generate(),\r\n      nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.paragraph(),\r\n    Images: [\r\n      {\r\n        src: faker.image.image(),\r\n      },\r\n    ],\r\n    Comments: [\r\n      {\r\n        User: {\r\n          id: shortId.generate(),\r\n          nickname: faker.name.findName(),\r\n        },\r\n        content: faker.lorem.sentence(),\r\n      },\r\n    ],\r\n  })));\r\n\r\nexport const LOAD_POSTS_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"은짱\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"은짱\",\r\n  },\r\n});\r\n//reducer는 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 ㅣ키면서)\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts.action.data.concat(draft.mainPosts);\r\n        draft.hasMorePost = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(dummyPost(action.data));\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = true;\r\n        draft.addPostError = action.error;\r\n        break;\r\n\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n        post.Comments.unshift(dummyComment(action.data.content));\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n        // const postIndex = state.mainPosts.findIndex(\r\n        //   (v) => v.id === action.data.postId\r\n        // );\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}