{"ast":null,"code":"import axios from \"axios\";\nimport { delay, put, takeLatest, all, fork, throttle, call } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n        data: result.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data // data: result.data,\n\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data); //Post /post/1/comment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","delay","put","takeLatest","all","fork","throttle","call","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPostAPI","data","post","content","addPost","action","result","type","id","err","response","loadPostsAPI","get","loadPosts","removePostAPI","removePost","addCommentAPI","postId","addComment","console","error","watchAddPost","watchLoadPosts","watchRemovePost","watchAddComment","postSaga"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  delay,\r\n  put,\r\n  takeLatest,\r\n  all,\r\n  fork,\r\n  throttle,\r\n  call,\r\n} from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  LOAD_POSTS_FAILURE,\r\n  LOAD_POSTS_REQUEST,\r\n  LOAD_POSTS_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/post\", { content: data });\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: {\r\n        id,\r\n        content: action.data,\r\n        data: result.data,\r\n      },\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostsAPI(data) {\r\n  return axios.get(\"/posts\", data);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    // const result = yield call(removePostAPI, action.data);\r\n    yield delay(1000);\r\n\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: action.data,\r\n      // data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, data); //Post /post/1/comment\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchLoadPosts),\r\n    fork(watchRemovePost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}