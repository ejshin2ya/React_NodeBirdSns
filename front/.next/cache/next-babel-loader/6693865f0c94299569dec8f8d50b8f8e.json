{"ast":null,"code":"import axios from \"axios\";\nimport { delay, put, takeLatest, all, fork, throttle, call } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data); //Post /post/1/comment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLikePost), fork(watchUnlikePost), fork(watchAddPost), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","delay","put","takeLatest","all","fork","throttle","call","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPostAPI","data","post","content","addPost","action","result","type","id","err","console","error","response","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","loadPostsAPI","get","loadPosts","removePostAPI","removePost","addCommentAPI","postId","addComment","watchLikePost","watchUnlikePost","watchAddPost","watchLoadPosts","watchRemovePost","watchAddComment","postSaga"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  delay,\r\n  put,\r\n  takeLatest,\r\n  all,\r\n  fork,\r\n  throttle,\r\n  call,\r\n} from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LOAD_POSTS_FAILURE,\r\n  LOAD_POSTS_REQUEST,\r\n  LOAD_POSTS_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/post\", { content: data });\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostsAPI(data) {\r\n  return axios.get(\"/posts\", data);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, data); //Post /post/1/comment\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchAddPost),\r\n    fork(watchLoadPosts),\r\n    fork(watchRemovePost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}