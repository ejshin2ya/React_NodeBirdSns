{"ast":null,"code":"import produce from \"immer\";\nexport var initialState = {\n  mainPosts: [],\n  singlePost: null,\n  imagePaths: [],\n  hasMorePost: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\nexport var UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport var UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport var UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport var LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport var LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport var RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport var RETWEET_FAILURE = \"RETWEET_FAILURE\";\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n}; //reducer는 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 ㅣ키면서)\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePost = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex(\n          //   (v) => v.id === action.data.postId\n          // );\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","singlePost","imagePaths","hasMorePost","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","loadPostLoading","loadPostDone","loadPostError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","addPost","data","type","addComment","reducer","state","action","draft","unshift","error","filter","v","i","post","find","id","PostId","Likers","push","UserId","concat","length","Comments"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/front/reducers/post.js"],"sourcesContent":["import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  singlePost: null,\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  retweetLoading: false,\r\n  retweetDone: false,\r\n  retweetError: null,\r\n};\r\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\r\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\r\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\r\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\r\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\r\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\r\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\r\n\r\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\n//reducer는 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 ㅣ키면서)\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case RETWEET_REQUEST:\r\n        draft.retweetLoading = true;\r\n        draft.retweetDone = false;\r\n        draft.retweetError = null;\r\n        break;\r\n      case RETWEET_SUCCESS: {\r\n        draft.retweetLoading = false;\r\n        draft.retweetDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      }\r\n      case RETWEET_FAILURE:\r\n        draft.retweetLoading = false;\r\n        draft.retweetError = action.error;\r\n        break;\r\n\r\n      case REMOVE_IMAGE:\r\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n        break;\r\n      case UPLOAD_IMAGES_REQUEST:\r\n        draft.uploadImagesLoading = true;\r\n        draft.uploadImagesDone = false;\r\n        draft.uploadImagesError = null;\r\n        break;\r\n      case UPLOAD_IMAGES_SUCCESS: {\r\n        draft.imagePaths = action.data;\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = true;\r\n        break;\r\n      }\r\n      case UPLOAD_IMAGES_FAILURE:\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesError = action.error;\r\n        break;\r\n\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers.push({ id: action.data.UserId });\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      }\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostDone = false;\r\n        draft.unlikePostError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n      }\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = draft.mainPosts.concat(action.data);\r\n        draft.hasMorePost = action.data.length === 10;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostDone = true;\r\n        draft.singlePost = action.data;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        draft.imagePaths = [];\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n        // const postIndex = state.mainPosts.findIndex(\r\n        //   (v) => v.id === action.data.postId\r\n        // );\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}