{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eunjeong\\\\Desktop\\\\Front-end\\\\\\uC778\\uD504\\uB7F0\\\\NodeBirdSns\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput(\"\");\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n    setText(\"\");\n  }, [text]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"names":["React","useCallback","useRef","useEffect","Button","Form","Input","useSelector","useDispatch","addPost","UPLOAD_IMAGES_REQUEST","useInput","PostForm","imagePaths","addPostDone","state","post","dispatch","text","onChangeText","setText","onSubmit","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","type","data","margin","float","map","v","display","width"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/front/components/PostForm.js"],"sourcesContent":["import React, { useCallback, useRef, useEffect } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPost, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPost(text));\r\n    setText(\"\");\r\n  }, [text]);\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  const onChangeImages = useCallback((e) => {\r\n    console.log(\"images\", e.target.files);\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files, (f) => {\r\n      imageFormData.append(\"image\", f);\r\n    });\r\n    dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onFinish={onSubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n      />\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          multiple\r\n          hidden\r\n          ref={imageInput}\r\n          onChange={onChangeImages}\r\n        />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,qBAAlB,QAA+C,kBAA/C;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAA8BP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/C;EACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAM,CAACU,IAAD,EAAOC,YAAP,EAAqBC,OAArB,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;EAEAR,SAAS,CAAC,MAAM;IACd,IAAIW,WAAJ,EAAiB;MACfM,OAAO,CAAC,EAAD,CAAP;IACD;EACF,CAJQ,EAIN,CAACN,WAAD,CAJM,CAAT;EAMA,MAAMO,QAAQ,GAAGpB,WAAW,CAAC,MAAM;IACjCgB,QAAQ,CAACR,OAAO,CAACS,IAAD,CAAR,CAAR;IACAE,OAAO,CAAC,EAAD,CAAP;EACD,CAH2B,EAGzB,CAACF,IAAD,CAHyB,CAA5B;EAKA,MAAMI,UAAU,GAAGpB,MAAM,EAAzB;EACA,MAAMqB,kBAAkB,GAAGtB,WAAW,CAAC,MAAM;IAC3CqB,UAAU,CAACE,OAAX,CAAmBC,KAAnB;EACD,CAFqC,EAEnC,CAACH,UAAU,CAACE,OAAZ,CAFmC,CAAtC;EAIA,MAAME,cAAc,GAAGzB,WAAW,CAAE0B,CAAD,IAAO;IACxCC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,CAAC,CAACG,MAAF,CAASC,KAA/B;IACA,MAAMC,aAAa,GAAG,IAAIC,QAAJ,EAAtB;IACA,GAAGC,OAAH,CAAWC,IAAX,CAAgBR,CAAC,CAACG,MAAF,CAASC,KAAzB,EAAiCK,CAAD,IAAO;MACrCJ,aAAa,CAACK,MAAd,CAAqB,OAArB,EAA8BD,CAA9B;IACD,CAFD;IAGAnB,QAAQ,CAAC;MACPqB,IAAI,EAAE5B,qBADC;MAEP6B,IAAI,EAAEP;IAFC,CAAD,CAAR;EAID,CAViC,CAAlC;EAYA,OACE,MAAC,IAAD;IACE,KAAK,EAAE;MAAEQ,MAAM,EAAE;IAAV,CADT;IAEE,OAAO,EAAC,qBAFV;IAGE,QAAQ,EAAEnB,QAHZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAKE,MAAC,KAAD,CAAO,QAAP;IACE,KAAK,EAAEH,IADT;IAEE,QAAQ,EAAEC,YAFZ;IAGE,SAAS,EAAE,GAHb;IAIE,WAAW,EAAC,wEAJd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALF,EAWE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IACE,IAAI,EAAC,MADP;IAEE,IAAI,EAAC,OAFP;IAGE,QAAQ,MAHV;IAIE,MAAM,MAJR;IAKE,GAAG,EAAEG,UALP;IAME,QAAQ,EAAEI,cANZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EASE,MAAC,MAAD;IAAQ,OAAO,EAAEH,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2CATF,EAUE,MAAC,MAAD;IAAQ,IAAI,EAAC,SAAb;IAAuB,KAAK,EAAE;MAAEkB,KAAK,EAAE;IAAT,CAA9B;IAAkD,QAAQ,EAAC,QAA3D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAVF,CAXF,EAyBE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG5B,UAAU,CAAC6B,GAAX,CAAgBC,CAAD,IACd;IAAK,GAAG,EAAEA,CAAV;IAAa,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAX,CAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAK,GAAG,EAAED,CAAV;IAAa,KAAK,EAAE;MAAEE,KAAK,EAAE;IAAT,CAApB;IAAwC,GAAG,EAAEF,CAA7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CAFF,CADD,CADH,CAzBF,CADF;AAsCD,CAvED;;AAyEA,eAAe/B,QAAf"},"metadata":{},"sourceType":"module"}