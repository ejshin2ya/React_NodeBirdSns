{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eunjeong\\\\Desktop\\\\Front-end\\\\\\uC778\\uD504\\uB7F0\\\\NodeBirdSns\\\\front\\\\pages\\\\post\\\\[id].js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n//post/[id].js\nimport React from \"next/router\";\nimport { useRouter } from \"next/router\";\nimport { END } from \"redux-saga\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport wrapper from \"../../store/configureStore\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), \";\");\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async _ref => {\n  let {\n    req,\n    res\n  } = _ref,\n      etc = _objectWithoutProperties(_ref, [\"req\", \"res\"]);\n\n  const cookie = req ? req.headers.cookie : \"\"; //쿠키 공유 막기위해\n\n  axios.defaults.headers.Cookie = \"\";\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: req.params.id\n  }); //request 후 success가 되고 나서 돌아오도록 기다리는 코드\n\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"names":["React","useRouter","END","axios","useSelector","wrapper","AppLayout","PostCard","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","Post","router","id","query","singlePost","state","post","getServerSideProps","store","req","res","etc","cookie","headers","defaults","Cookie","dispatch","type","data","params","sagaTask","toPromise"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/front/pages/post/[id].js"],"sourcesContent":["//post/[id].js\r\n\r\nimport React from \"next/router\";\r\nimport { useRouter } from \"next/router\";\r\nimport { END } from \"redux-saga\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport wrapper from \"../../store/configureStore\";\r\nimport AppLayout from \"../../components/AppLayout\";\r\nimport PostCard from \"../../components/PostCard\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\r\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\r\n\r\nconst Post = () => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { singlePost } = useSelector((state) => state.post);\r\n  return (\r\n    <AppLayout>\r\n      <PostCard post={singlePost} />;\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  (store) =>\r\n    async ({ req, res, ...etc }) => {\r\n      const cookie = req ? req.headers.cookie : \"\";\r\n      //쿠키 공유 막기위해\r\n      axios.defaults.headers.Cookie = \"\";\r\n      if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n      }\r\n      store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n      });\r\n      store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: req.params.id,\r\n      });\r\n      //request 후 success가 되고 나서 돌아오도록 기다리는 코드\r\n      store.dispatch(END);\r\n      await store.sagaTask.toPromise();\r\n    }\r\n);\r\nexport default Post;\r\n"],"mappings":";;;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAMC,MAAM,GAAGV,SAAS,EAAxB;EACA,MAAM;IAAEW;EAAF,IAASD,MAAM,CAACE,KAAtB;EACA,MAAM;IAAEC;EAAF,IAAiBV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;EACA,OACE,MAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,QAAD;IAAU,IAAI,EAAEF,UAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,MADF;AAKD,CATD;;AAWA,OAAO,MAAMG,kBAAkB,GAAGZ,OAAO,CAACY,kBAAR,CAC/BC,KAAD,IACE,cAAgC;EAAA,IAAzB;IAAEC,GAAF;IAAOC;EAAP,CAAyB;EAAA,IAAVC,GAAU;;EAC9B,MAAMC,MAAM,GAAGH,GAAG,GAAGA,GAAG,CAACI,OAAJ,CAAYD,MAAf,GAAwB,EAA1C,CAD8B,CAE9B;;EACAnB,KAAK,CAACqB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;EACA,IAAIN,GAAG,IAAIG,MAAX,EAAmB;IACjBnB,KAAK,CAACqB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCH,MAAhC;EACD;;EACDJ,KAAK,CAACQ,QAAN,CAAe;IACbC,IAAI,EAAEnB;EADO,CAAf;EAGAU,KAAK,CAACQ,QAAN,CAAe;IACbC,IAAI,EAAElB,iBADO;IAEbmB,IAAI,EAAET,GAAG,CAACU,MAAJ,CAAWjB;EAFJ,CAAf,EAV8B,CAc9B;;EACAM,KAAK,CAACQ,QAAN,CAAexB,GAAf;EACA,MAAMgB,KAAK,CAACY,QAAN,CAAeC,SAAf,EAAN;AACD,CAnB6B,CAA3B;AAqBP,eAAerB,IAAf"},"metadata":{},"sourceType":"module"}