{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eunjeong\\\\Desktop\\\\Front-end\\\\\\uC778\\uD504\\uB7F0\\\\NodeBirdSns\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport React, { useState, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from \"../reducers/post\";\nimport CommentForm from \"./CommentForm\";\nimport FollowButton from \"./FollowButton\";\nimport PostCardContent from \"./PostCardContent\";\nimport PostImages from \"./Postimages\";\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onLike = useCallback(() => {\n    dispatch({\n      LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onUnlike = useCallback(() => {\n    dispatch({\n      UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  });\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onUnlike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        loading: removePostLoading,\n        onClick: onRemovePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 27\n        }\n      }, item.User.nickname[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), item.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","Avatar","Button","Card","Comment","List","Popover","PropTypes","React","useState","useCallback","useSelector","useDispatch","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","CommentForm","FollowButton","PostCardContent","PostImages","PostCard","post","dispatch","removePostLoading","state","liked","setLiked","commentFormOpened","setCommentFormOpened","onLike","data","id","onUnlike","onToggleComment","prev","onRemovePost","type","user","me","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/front/components/PostCard.js"],"sourcesContent":["import {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n  HeartTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  REMOVE_POST_REQUEST,\r\n  LIKE_POST_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n} from \"../reducers/post\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport PostImages from \"./Postimages\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const onLike = useCallback(() => {\r\n    dispatch({\r\n      LIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n  const onUnlike = useCallback(() => {\r\n    dispatch({\r\n      UNLIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  });\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  });\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onUnlike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onLike} />\r\n          ),\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button\r\n                      type=\"danger\"\r\n                      loading={removePostLoading}\r\n                      onClick={onRemovePost}\r\n                    >\r\n                      삭제\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        extra={id && <FollowButton post={post} />}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                />\r\n                {item.content}\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n      {/* <CommentForm /> */}\r\n      {/* <Comments /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.string,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}