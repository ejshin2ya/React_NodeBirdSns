{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"eunjeong\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판이 나왔군요~\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"hero\"\n      },\n      content: \"얼른 사고싶어\"\n    }]\n  }],\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const generateDymmyPost = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.image()\n  }],\n  Comments: [{\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n}));\nexport const LOAD_POSTS_REQUEST = \"LOAD_POST_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POST_FAILURE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"은짱\"\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"은짱\"\n  }\n}); //reducer는 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 ㅣ키면서)\n\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts.action.data.concat(draft.mainPosts);\n        draft.hasMorePost = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = true;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = true;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.postId);\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex(\n          //   (v) => v.id === action.data.postId\n          // );\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","hasMorePost","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","generateDymmyPost","number","Array","fill","map","name","findName","lorem","paragraph","image","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","concat","length","error","unshift","filter","v","post","find","postId"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\r\nimport produce from \"immer\";\r\nimport faker from \"faker\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"eunjeong\",\r\n      },\r\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\r\n      Images: [\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"nero\",\r\n          },\r\n          content: \"우와 개정판이 나왔군요~\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"hero\",\r\n          },\r\n          content: \"얼른 사고싶어\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const generateDymmyPost = (number) =>\r\n  Array(number)\r\n    .fill()\r\n    .map(() => ({\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: faker.name.findName(),\r\n      },\r\n      content: faker.lorem.paragraph(),\r\n      Images: [\r\n        {\r\n          src: faker.image.image(),\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: faker.name.findName(),\r\n          },\r\n          content: faker.lorem.sentence(),\r\n        },\r\n      ],\r\n    }));\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POST_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POST_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POST_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"은짱\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"은짱\",\r\n  },\r\n});\r\n//reducer는 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 ㅣ키면서)\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts.action.data.concat(draft.mainPosts);\r\n        draft.hasMorePost = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(dummyPost(action.data));\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = true;\r\n        draft.addPostError = action.error;\r\n        break;\r\n\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n        post.Comments.unshift(dummyComment(action.data.content));\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n        // const postIndex = state.mainPosts.findIndex(\r\n        //   (v) => v.id === action.data.postId\r\n        // );\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}