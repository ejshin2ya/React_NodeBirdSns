{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eunjeong\\\\Desktop\\\\Front-end\\\\\\uC778\\uD504\\uB7F0\\\\NodeBirdSns\\\\front\\\\pages\\\\post\\\\[id].js\";\nvar __jsx = React.createElement;\n//post/[id].js\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { END } from \"redux-saga\";\nimport axios from \"axios\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport wrapper from \"../../store/configureStore\";\nimport PostCard from \"../../components/PostCard\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\n\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost.User.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : \"https://nodebird.com/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/post/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}; // export const getServerSideProps = wrapper.getServerSideProps(\n//   (store) =>\n//     async ({ req, res, ...etc }) => {\n//       const cookie = req ? req.headers.cookie : \"\";\n//       //쿠키 공유 막기위해\n//       axios.defaults.headers.Cookie = \"\";\n//       if (req && cookie) {\n//         axios.defaults.headers.Cookie = cookie;\n//       }\n//       store.dispatch({\n//         type: LOAD_MY_INFO_REQUEST,\n//       });\n//       store.dispatch({\n//         type: LOAD_POST_REQUEST,\n//         data: req.id, //이부분 오류남\n//       });\n//       //request 후 success가 되고 나서 돌아오도록 기다리는 코드\n//       store.dispatch(END);\n//       await store.sagaTask.toPromise();\n//     }\n// );\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  console.log(context); //쿠키 공유 막기위해\n\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return {\n    props: {}\n  };\n});\nexport default Post;","map":{"version":3,"names":["React","useSelector","Head","useRouter","END","axios","LOAD_POST_REQUEST","wrapper","PostCard","AppLayout","LOAD_MY_INFO_REQUEST","Post","singlePost","state","post","router","id","query","User","nickname","content","Images","src","getServerSideProps","context","cookie","req","headers","console","log","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise","props"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/front/pages/post/[id].js"],"sourcesContent":["//post/[id].js\r\n\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Head from \"next/head\";\r\nimport { useRouter } from \"next/router\";\r\nimport { END } from \"redux-saga\";\r\n\r\nimport axios from \"axios\";\r\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport PostCard from \"../../components/PostCard\";\r\nimport AppLayout from \"../../components/AppLayout\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\r\n\r\nconst Post = () => {\r\n  const { singlePost } = useSelector((state) => state.post);\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>\r\n          {singlePost.User.nickname}\r\n          님의 글\r\n        </title>\r\n        <meta name=\"description\" content={singlePost.content} />\r\n        <meta\r\n          property=\"og:title\"\r\n          content={`${singlePost.User.nickname}님의 게시글`}\r\n        />\r\n        <meta property=\"og:description\" content={singlePost.content} />\r\n        <meta\r\n          property=\"og:image\"\r\n          content={\r\n            singlePost.Images[0]\r\n              ? singlePost.Images[0].src\r\n              : \"https://nodebird.com/favicon.ico\"\r\n          }\r\n        />\r\n        <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n      </Head>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\n// export const getServerSideProps = wrapper.getServerSideProps(\r\n//   (store) =>\r\n//     async ({ req, res, ...etc }) => {\r\n//       const cookie = req ? req.headers.cookie : \"\";\r\n//       //쿠키 공유 막기위해\r\n//       axios.defaults.headers.Cookie = \"\";\r\n//       if (req && cookie) {\r\n//         axios.defaults.headers.Cookie = cookie;\r\n//       }\r\n//       store.dispatch({\r\n//         type: LOAD_MY_INFO_REQUEST,\r\n//       });\r\n//       store.dispatch({\r\n//         type: LOAD_POST_REQUEST,\r\n//         data: req.id, //이부분 오류남\r\n//       });\r\n//       //request 후 success가 되고 나서 돌아오도록 기다리는 코드\r\n//       store.dispatch(END);\r\n//       await store.sagaTask.toPromise();\r\n//     }\r\n// );\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : \"\";\r\n    console.log(context);\r\n    //쿠키 공유 막기위해\r\n    axios.defaults.headers.Cookie = \"\";\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n      data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n    return { props: {} };\r\n  }\r\n);\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}