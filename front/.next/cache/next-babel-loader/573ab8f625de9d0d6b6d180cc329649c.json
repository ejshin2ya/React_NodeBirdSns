{"ast":null,"code":"import produce from \"immer\";\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  likePostsLoading: false,\n  likePostsDone: false,\n  likePostsError: null,\n  unlikePostsLoading: false,\n  unlikePostsDone: false,\n  unlikePostsError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n}); //reducer는 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 ㅣ키면서)\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LIKE_POST_REQUEST:\n        draft.likePostsLoading = true;\n        draft.likePostsDone = false;\n        draft.likePostsError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostsLoading = false;\n          draft.likePostsDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostsLoading = false;\n        draft.likePostsError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostsLoading = true;\n        draft.unlikePostsDone = false;\n        draft.unlikePostsError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n          draft.unlikePostsLoading = false;\n          draft.unlikePostsDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostsLoading = false;\n        draft.unlikePostsError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePost = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex(\n          //   (v) => v.id === action.data.postId\n          // );\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","imagePaths","hasMorePost","likePostsLoading","likePostsDone","likePostsError","unlikePostsLoading","unlikePostsDone","unlikePostsError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","post","find","v","id","PostId","Likers","push","UserId","error","filter","concat","length","unshift","Comments"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/front/reducers/post.js"],"sourcesContent":["import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  likePostsLoading: false,\r\n  likePostsDone: false,\r\n  likePostsError: null,\r\n  unlikePostsLoading: false,\r\n  unlikePostsDone: false,\r\n  unlikePostsError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\n//reducer는 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 ㅣ키면서)\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostsLoading = true;\r\n        draft.likePostsDone = false;\r\n        draft.likePostsError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers.push({ id: action.data.UserId });\r\n        draft.likePostsLoading = false;\r\n        draft.likePostsDone = true;\r\n        break;\r\n      }\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostsLoading = false;\r\n        draft.likePostsError = action.error;\r\n        break;\r\n\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostsLoading = true;\r\n        draft.unlikePostsDone = false;\r\n        draft.unlikePostsError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n        draft.unlikePostsLoading = false;\r\n        draft.unlikePostsDone = true;\r\n        break;\r\n      }\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostsLoading = false;\r\n        draft.unlikePostsError = action.error;\r\n        break;\r\n\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = action.data.concat(draft.mainPosts);\r\n        draft.hasMorePost = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n        // const postIndex = state.mainPosts.findIndex(\r\n        //   (v) => v.id === action.data.postId\r\n        // );\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}