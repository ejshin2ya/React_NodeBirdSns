{"ast":null,"code":"import axios from \"axios\";\nimport { delay, put, takeLatest, all, fork } from \"redux-saga/effects\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\" // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["axios","delay","put","takeLatest","all","fork","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/sagas/user.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { delay, put, takeLatest, all, fork } from \"redux-saga/effects\";\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/api/login\", data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(logInAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: \"LOG_IN_SUCCESS\",\r\n      data: action.data,\r\n      // data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_IN_FAILURE\",\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/api/login\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: \"LOG_OUT_SUCCESS\",\r\n      // data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_OUT_FAILURE\",\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,UAArB,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,oBAAlD;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,OAAOP,KAAK,CAACQ,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;EACtB,IAAI;IACF;IACA,MAAMT,KAAK,CAAC,IAAD,CAAX;IACA,MAAMC,GAAG,CAAC;MACRS,IAAI,EAAE,gBADE;MAERJ,IAAI,EAAEG,MAAM,CAACH,IAFL,CAGR;;IAHQ,CAAD,CAAT;EAKD,CARD,CAQE,OAAOK,GAAP,EAAY;IACZ,MAAMV,GAAG,CAAC;MACRS,IAAI,EAAE,gBADE;MAERJ,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASO,SAAT,GAAqB;EACnB,OAAOd,KAAK,CAACQ,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUO,MAAV,GAAmB;EACjB,IAAI;IACF;IACA,MAAMd,KAAK,CAAC,IAAD,CAAX;IACA,MAAMC,GAAG,CAAC;MACRS,IAAI,EAAE,iBADE,CAER;;IAFQ,CAAD,CAAT;EAID,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZ,MAAMV,GAAG,CAAC;MACRS,IAAI,EAAE,iBADE;MAERJ,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;IAFX,CAAD,CAAT;EAID;AACF;;AAED,UAAUS,UAAV,GAAuB;EACrB,MAAMb,UAAU,CAAC,gBAAD,EAAmBM,KAAnB,CAAhB;AACD;;AAED,UAAUQ,WAAV,GAAwB;EACtB,MAAMd,UAAU,CAAC,iBAAD,EAAoBY,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;EAClC,MAAMd,GAAG,CAAC,CAACC,IAAI,CAACW,UAAD,CAAL,EAAmBX,IAAI,CAACY,WAAD,CAAvB,CAAD,CAAT;AACD"},"metadata":{},"sourceType":"module"}