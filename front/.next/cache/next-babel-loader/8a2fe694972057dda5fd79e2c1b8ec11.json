{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(retweet),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(uploadImages),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(addPost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(likePost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime().mark(unlikePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime().mark(loadPost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime().mark(loadPosts),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime().mark(removePost),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime().mark(addComment),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime().mark(watchRetweet),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime().mark(watchUploadImages),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime().mark(watchLikePost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime().mark(watchUnlikePost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime().mark(watchAddPost),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime().mark(watchLoadPost),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime().mark(watchLoadPosts),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime().mark(watchRemovePost),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime().mark(watchAddComment),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime().mark(postSaga);\n\nimport axios from \"axios\";\nimport { put, takeLatest, all, fork, throttle, call } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction retweetAPI(data) {\n  return axios.post(\"/post/\".concat(data, \"/retweet\"), data);\n}\n\nfunction retweet(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function retweet$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(retweetAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: RETWEET_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: RETWEET_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(\"/post/images\", data); //form 데이터는 json 형식이 아닌 그대로의 data로 넣어준다.\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function uploadImages$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function addPost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context3.next = 15;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 15;\n          return put({\n            type: ADD_POST_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function likePost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: LIKE_POST_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction unlikePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/like\"));\n}\n\nfunction unlikePost(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function unlikePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(unlikePostAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/post/\".concat(data));\n}\n\nfunction loadPost(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function loadPost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(loadPostAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 12;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function loadPosts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadPostsAPI, action.lastId);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 12;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data));\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function removePost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context8.next = 8;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: action.data\n          });\n\n        case 8:\n          _context8.next = 15;\n          break;\n\n        case 10:\n          _context8.prev = 10;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(_context8.t0);\n          _context8.next = 15;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 10]]);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data); //Post /post/1/comment\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function addComment$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            error: _context9.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchRetweet() {\n  return _regeneratorRuntime().wrap(function watchRetweet$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(RETWEET_REQUEST, retweet);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime().wrap(function watchUploadImages$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchLikePost() {\n  return _regeneratorRuntime().wrap(function watchLikePost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchUnlikePost() {\n  return _regeneratorRuntime().wrap(function watchUnlikePost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime().wrap(function watchAddPost$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchLoadPost() {\n  return _regeneratorRuntime().wrap(function watchLoadPost$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return throttle(5000, LOAD_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime().wrap(function watchLoadPosts$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime().wrap(function watchRemovePost$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime().wrap(function watchAddComment$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime().wrap(function postSaga$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return all([fork(watchRetweet), fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchAddPost), fork(watchLoadPosts), fork(watchLoadPost), fork(watchRemovePost), fork(watchAddComment)]);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}","map":{"version":3,"names":["retweet","uploadImages","addPost","likePost","unlikePost","loadPost","loadPosts","removePost","addComment","watchRetweet","watchUploadImages","watchLikePost","watchUnlikePost","watchAddPost","watchLoadPost","watchLoadPosts","watchRemovePost","watchAddComment","postSaga","axios","put","takeLatest","all","fork","throttle","call","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","retweetAPI","data","post","action","result","type","error","response","uploadImagesAPI","addPostAPI","id","console","likePostAPI","patch","unlikePostAPI","loadPostAPI","get","loadPostsAPI","lastId","removePostAPI","addCommentAPI","postId"],"sources":["C:/Users/eunjeong/Desktop/Front-end/인프런/NodeBirdSns/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { put, takeLatest, all, fork, throttle, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LOAD_POSTS_FAILURE,\r\n  LOAD_POSTS_REQUEST,\r\n  LOAD_POSTS_SUCCESS,\r\n  LOAD_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  RETWEET_FAILURE,\r\n  RETWEET_REQUEST,\r\n  RETWEET_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n  UPLOAD_IMAGES_FAILURE,\r\n  UPLOAD_IMAGES_REQUEST,\r\n  UPLOAD_IMAGES_SUCCESS,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\n\r\nfunction retweetAPI(data) {\r\n  return axios.post(`/post/${data}/retweet`, data);\r\n}\r\n\r\nfunction* retweet(action) {\r\n  try {\r\n    const result = yield call(retweetAPI, action.data);\r\n    yield put({\r\n      type: RETWEET_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post(\"/post/images\", data); //form 데이터는 json 형식이 아닌 그대로의 data로 넣어준다.\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/post\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostAPI(data) {\r\n  return axios.get(`/post/${data}`);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.lastId);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, data); //Post /post/1/comment\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield throttle(5000, LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchRetweet),\r\n    fork(watchUploadImages),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchAddPost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLoadPost),\r\n    fork(watchRemovePost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}